{"mappings":"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","sources":["src/js/notes.js","src/index.js"],"sourcesContent":["export const categories = ['Task', 'Random Thought', 'Idea'];\nexport const notes = [\n  {\n    id: 1,\n    name: 'Theory of evolution',\n    createdAt: '2023-07-30',\n    content: 'This is a random thought',\n    category: 'Random Thought',\n    dates: ['2023-06-10'],\n  },\n  {\n    id: 2,\n    name: 'Shopping List',\n    createdAt: '2023-07-31',\n    content:\n      \"I'm gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\n    category: 'Task',\n    dates: ['3/5/2021', '5/5/2021'],\n  },\n  {\n    id: 3,\n    name: 'New Feature',\n    createdAt: '2023-07-29',\n    content: 'I have an idea for a new project',\n    category: 'Idea',\n    dates: ['2023-08-01'],\n  },\n  {\n    id: 4,\n    name: 'Shopping List',\n    createdAt: '2023-07-28',\n    content: 'Buy milk',\n    category: 'Task',\n    dates: ['2023-07-31'],\n  },\n  {\n    id: 5,\n    name: 'To-do List',\n    createdAt: '2023-07-27',\n    content: 'Walk the dog',\n    category: 'Task',\n    dates: ['2023-07-30', '2023-07-31'],\n  },\n  {\n    id: 6,\n    name: 'To-do List',\n    createdAt: '2023-07-26',\n    content: 'Call my mom',\n    category: 'Task',\n    dates: ['2023-07-31'],\n  },\n  {\n    id: 7,\n    name: 'Shopping List',\n    createdAt: '2023-07-25',\n    content: 'Pay the bills',\n    category: 'Task',\n    dates: ['2023-07-31'],\n  },\n];\n\n","import { notes, categories } from './js/notes.js';\n\nconst notesTable = document.getElementById('notes-table');\nconst archivedNotesTable = document.getElementById('archived-notes-table');\nconst unarchiveNoteButtons = document.querySelectorAll('.unarchive-btn');\nconst summaryTable = document.getElementById('summary-table');\nconst addNoteBtn = document.getElementById('add-note-btn');\nconst modalOverlay = document.getElementById('modal-overlay');\nconst modalSaveBtn = document.getElementById('modal-save-btn');\nconst modalCancelBtn = document.getElementById('modal-cancel-btn');\nconst editModalOverlay = document.getElementById('edit-modal-overlay');\nconst editModalSaveBtn = document.getElementById('edit-modal-save-btn');\nconst editModalCancelBtn = document.getElementById('edit-modal-cancel-btn');\n\nlet editNoteId;\n\n// Markup function\n\nfunction createNoteRow(note) {\n  const dates = note.dates.join(', ');\n  return `\n        <tr>\n            <td>${note.createdAt}</td>\n            <td>${note.content}</td>\n            <td>${note.category}</td>\n            <td>${dates}</td>\n            <td>\n                <button class=\"edit-btn\" data-note-id=\"${note.id}\">Edit</button>\n                <button class=\"archive-btn\" data-note-id=\"${note.id}\">Archive</button>\n                <button class=\"delete-btn\" data-note-id=\"${note.id}\">Delete</button>\n            </td>\n        </tr>\n    `;\n}\nfunction createArchivedNoteRow(note) {\n  const dates = note.dates.join(', ');\n  return `\n      <tr>\n          <td>${note.createdAt}</td>\n          <td>${note.content}</td>\n          <td>${note.category}</td>\n          <td>${dates}</td>\n          <td>\n              <button class=\"unarchive-btn\" data-note-id=\"${note.id}\">Unarchive</button>\n          </td>\n      </tr>\n    `;\n}\nfunction createSummaryRow(category, activeCount, archivedCount) {\n  return `\n        <tr>\n            <td>${category}</td>\n            <td>${activeCount}</td>\n            <td>${archivedCount}</td>\n        </tr>\n    `;\n}\n\n// Update function\nfunction updateNotesTable() {\n  const activeNotes = notes.filter(note => !note.archived);\n  const notesHTML = activeNotes.map(createNoteRow).join('');\n  notesTable.querySelector('tbody').innerHTML = notesHTML;\n\n  const editButtons = notesTable.querySelectorAll('.edit-btn');\n  editButtons.forEach(button => {\n    button.addEventListener('click', handleEditButtonClick);\n  });\n\n  const archiveButtons = notesTable.querySelectorAll('.archive-btn');\n  archiveButtons.forEach(button => {\n    button.addEventListener('click', handleArchiveButtonClick);\n  });\n\n  const deleteButtons = notesTable.querySelectorAll('.delete-btn');\n  deleteButtons.forEach(button => {\n    button.addEventListener('click', handleDeleteButtonEvent);\n  });\n}\n\nfunction updateSummaryTable() {\n  const summaryData = [];\n  categories.forEach(category => {\n    const activeCount = notes.filter(\n      note => !note.archived && note.category === category\n    ).length;\n    const archivedCount = notes.filter(\n      note => note.archived && note.category === category\n    ).length;\n    summaryData.push({ category, activeCount, archivedCount });\n  });\n\n  const summaryHTML = summaryData\n    .map(data =>\n      createSummaryRow(data.category, data.activeCount, data.archivedCount)\n    )\n    .join('');\n  summaryTable.querySelector('tbody').innerHTML = summaryHTML;\n}\n\nfunction updateTables() {\n  updateNotesTable();\n  updateSummaryTable();\n  updateArchivedNotesTable();\n}\n//   Edit Modal\nfunction handleEditButtonClick(event) {\n  const noteId = event.target.dataset.noteId;\n  const note = notes.find(note => note.id === parseInt(noteId));\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n  showEditNoteModal(note);\n}\n\nfunction showEditNoteModal(note) {\n  editNoteId = note.id;\n  document.getElementById('edit-note-content-input').value = note.content;\n  document.getElementById('edit-note-category-input').value = note.category;\n  document.getElementById('edit-note-dates-input').value =\n    note.dates.join(', ');\n  editModalOverlay.style.display = 'block';\n\n  editModalSaveBtn.addEventListener('click', handleEditNoteSave);\n  editModalCancelBtn.addEventListener('click', hideEditNoteModal);\n}\n\nfunction handleEditNoteSave() {\n  const content = document\n    .getElementById('edit-note-content-input')\n    .value.trim();\n  const category = document.getElementById('edit-note-category-input').value;\n  const datesInput = document.getElementById('edit-note-dates-input').value;\n  const dates = parseDatesInput(datesInput);\n\n  if (!content) {\n    alert('Please enter note content.');\n    return;\n  }\n\n  const note = notes.find(note => note.id === editNoteId);\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n\n  note.content = content;\n  note.category = category;\n  note.dates = dates;\n\n  updateTables();\n  hideEditNoteModal();\n}\n\nfunction hideEditNoteModal() {\n  editModalOverlay.style.display = 'none';\n}\n\n// Archive function\nfunction handleArchiveButtonClick(event) {\n  const noteId = event.target.dataset.noteId;\n  archiveNote(parseInt(noteId));\n}\n\nfunction archiveNote(id) {\n  const note = notes.find(note => note.id === id);\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n  note.archived = true;\n  updateTables();\n}\n\nexport function unarchiveNote(id) {\n  const note = notes.find(note => note.id === id);\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n  note.archived = false;\n  updateArchivedNotesTable();\n  updateTables();\n}\nexport function handleUnarchiveButtonEvent(event) {\n  const noteId = event.target.dataset.noteId;\n  unarchiveNote(parseInt(noteId));\n}\n\nfunction updateArchivedNotesTable() {\n  const archivedNotes = notes.filter(note => note.archived);\n  const archivedNotesHTML = archivedNotes.map(createArchivedNoteRow).join('');\n  archivedNotesTable.querySelector('tbody').innerHTML = archivedNotesHTML;\n\n  const unarchiveButtons =\n    archivedNotesTable.querySelectorAll('.unarchive-btn');\n  unarchiveButtons.forEach(button => {\n    const noteId = button.dataset.noteId;\n    button.addEventListener('click', () => handleUnarchiveButtonClick(noteId));\n  });\n\n  const deleteButtons = archivedNotesTable.querySelectorAll('.delete-btn');\n  deleteButtons.forEach(button => {\n    const noteId = button.dataset.noteId;\n    button.addEventListener('click', () => handleDeleteButtonClick(noteId));\n  });\n\n  const editButtons = archivedNotesTable.querySelectorAll('.edit-btn');\n  editButtons.forEach(button => {\n    button.addEventListener('click', handleEditButtonClick);\n  });\n}\n\nfunction handleUnarchiveButtonClick(noteId) {\n  unarchiveNote(parseInt(noteId));\n}\n\nfunction handleDeleteButtonClick(noteId) {\n  deleteNote(parseInt(noteId));\n}\n// Delete function\n\nfunction handleDeleteButtonEvent(event) {\n  const noteId = event.target.dataset.noteId;\n  deleteNote(parseInt(noteId));\n}\n\nfunction deleteNote(id) {\n  const noteIndex = notes.findIndex(note => note.id === id);\n  if (noteIndex === -1) {\n    alert('Note not found!');\n    return;\n  }\n  notes.splice(noteIndex, 1);\n  updateTables();\n}\n\n// Add new note function\nfunction addNewNote() {\n  showAddNoteModal();\n\n  const modalSaveBtn = document.getElementById('modal-save-btn');\n  const modalCancelBtn = document.getElementById('modal-cancel-btn');\n\n  function onSaveClick() {\n    const content = document.getElementById('note-content-input').value.trim();\n    const category = document.getElementById('note-category-input').value;\n    const datesInput = document.getElementById('note-dates-input').value;\n    const dates = parseDatesInput(datesInput);\n\n    if (!content) {\n      alert('Please enter note content.');\n      return;\n    }\n\n    const newNote = {\n      id: notes.length + 1,\n      createdAt: new Date().toISOString().slice(0, 10),\n      content,\n      category,\n      dates,\n      archived: false,\n    };\n\n    notes.unshift(newNote);\n    updateTables();\n    hideAddNoteModal();\n\n    modalSaveBtn.removeEventListener('click', onSaveClick);\n  }\n\n  modalSaveBtn.addEventListener('click', onSaveClick);\n\n  modalCancelBtn.addEventListener('click', function () {\n    hideAddNoteModal();\n\n    modalSaveBtn.removeEventListener('click', onSaveClick);\n  });\n}\n\nfunction showAddNoteModal() {\n  modalOverlay.style.display = 'block';\n}\n\nfunction hideAddNoteModal() {\n  modalOverlay.style.display = 'none';\n}\n\n// For date function\nfunction parseDatesInput(datesInput) {\n  const datesArray = datesInput.split(',').map(date => date.trim());\n  return datesArray.filter(date => date !== '');\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  updateTables();\n  updateArchivedNotesTable();\n  modalOverlay.addEventListener('click', event => {\n    if (event.target === modalOverlay) {\n      hideAddNoteModal();\n    }\n  });\n  editModalOverlay.addEventListener('click', event => {\n    if (event.target === editModalOverlay) {\n      hideEditNoteModal();\n    }\n  });\n  const unarchiveButtons = archivedNotesTable.querySelectorAll('.delete-btn');\n  unarchiveButtons.forEach(button => {\n    const noteId = button.dataset.noteId;\n    button.addEventListener('click', () => handleUnarchiveButtonClick(noteId));\n  });\n  addNoteBtn.addEventListener('click', addNewNote);\n});\n"],"names":["$320552736c1199f4$export$2c76aca27257bcfa","$320552736c1199f4$export$fff9cb9cb797a870","id","name","createdAt","content","category","dates","$1f0dc3b9307be026$var$notesTable","document","getElementById","$1f0dc3b9307be026$var$archivedNotesTable","$1f0dc3b9307be026$var$summaryTable","querySelectorAll","$1f0dc3b9307be026$var$addNoteBtn","$1f0dc3b9307be026$var$modalOverlay","$1f0dc3b9307be026$var$editModalOverlay","$1f0dc3b9307be026$var$editModalSaveBtn","$1f0dc3b9307be026$var$editModalCancelBtn","$1f0dc3b9307be026$var$editNoteId","$1f0dc3b9307be026$var$createNoteRow","note","join","$1f0dc3b9307be026$var$createArchivedNoteRow","$1f0dc3b9307be026$var$updateTables","notesHTML","filter","archived","map","querySelector","innerHTML","forEach","button","addEventListener","$1f0dc3b9307be026$var$handleEditButtonClick","$1f0dc3b9307be026$var$handleArchiveButtonClick","$1f0dc3b9307be026$var$handleDeleteButtonEvent","$1f0dc3b9307be026$var$updateNotesTable","summaryData","activeCount","length","archivedCount","push","summaryHTML","data","$1f0dc3b9307be026$var$updateSummaryTable","$1f0dc3b9307be026$var$updateArchivedNotesTable","event","noteId","target","dataset","note1","find","parseInt","value","style","display","$1f0dc3b9307be026$var$handleEditNoteSave","$1f0dc3b9307be026$var$hideEditNoteModal","alert","trim","$1f0dc3b9307be026$var$parseDatesInput","note2","note3","$1f0dc3b9307be026$var$archiveNote","$1f0dc3b9307be026$export$3576927aeac67f67","note4","archivedNotesHTML","$1f0dc3b9307be026$var$handleUnarchiveButtonClick","$1f0dc3b9307be026$var$deleteNote","$1f0dc3b9307be026$var$handleDeleteButtonClick","noteIndex","findIndex","splice","$1f0dc3b9307be026$var$addNewNote","modalSaveBtn1","modalCancelBtn1","onSaveClick","newNote","Date","toISOString","slice","unshift","$1f0dc3b9307be026$var$hideAddNoteModal","removeEventListener","datesInput","split","date"],"version":3,"file":"index.46d6fc57.js.map"}