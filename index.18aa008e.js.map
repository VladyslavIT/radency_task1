{"mappings":"YAAO,ICcHA,EDdSC,EAAa,CAAC,OAAQ,iBAAkB,QACxCC,EAAQ,CACnB,CACEC,GAAI,EACJC,KAAM,sBACNC,UAAW,aACXC,QAAS,2BACTC,SAAU,iBACVC,MAAO,CAAC,eAEV,CACEL,GAAI,EACJC,KAAM,gBACNC,UAAW,aACXC,QACE,iFACFC,SAAU,OACVC,MAAO,CAAC,WAAY,aAEtB,CACEL,GAAI,EACJC,KAAM,cACNC,UAAW,aACXC,QAAS,mCACTC,SAAU,OACVC,MAAO,CAAC,eAEV,CACEL,GAAI,EACJC,KAAM,gBACNC,UAAW,aACXC,QAAS,WACTC,SAAU,OACVC,MAAO,CAAC,eAEV,CACEL,GAAI,EACJC,KAAM,aACNC,UAAW,aACXC,QAAS,eACTC,SAAU,OACVC,MAAO,CAAC,aAAc,eAExB,CACEL,GAAI,EACJC,KAAM,aACNC,UAAW,aACXC,QAAS,cACTC,SAAU,OACVC,MAAO,CAAC,eAEV,CACEL,GAAI,EACJC,KAAM,gBACNC,UAAW,aACXC,QAAS,gBACTC,SAAU,OACVC,MAAO,CAAC,gBCvDNC,EAAaC,SAASC,eAAe,eACrCC,EAAqBF,SAASC,eAAe,wBAE7CE,GADuBH,SAASI,iBAAiB,kBAClCJ,SAASC,eAAe,kBACvCI,EAAaL,SAASC,eAAe,gBACrCK,EAAeN,SAASC,eAAe,iBAGvCM,GAFeP,SAASC,eAAe,kBACtBD,SAASC,eAAe,oBACtBD,SAASC,eAAe,uBAC3CO,EAAmBR,SAASC,eAAe,uBAC3CQ,EAAqBT,SAASC,eAAe,yBAMnD,SAASS,EAAcC,GACrB,IAAMb,EAAQa,EAAKb,MAAMc,KAAK,MAC9B,MAAO,mCAGSC,OADAF,EAAKhB,UAAU,2BAEfkB,OADAF,EAAKf,QAAQ,2BAEbiB,OADAF,EAAKd,SAAS,2BAGyBgB,OAFvCf,EAAM,oFAGoCe,OADHF,EAAKlB,GAAG,+EAENoB,OADCF,EAAKlB,GAAG,iFACDoB,OAARF,EAAKlB,GAAG,4D,CAKnE,SAASqB,EAAsBH,GAC7B,IAAMb,EAAQa,EAAKb,MAAMc,KAAK,MAC9B,MAAO,+BAGOC,OADAF,EAAKhB,UAAU,yBAEfkB,OADAF,EAAKf,QAAQ,yBAEbiB,OADAF,EAAKd,SAAS,yBAG8BgB,OAF5Cf,EAAM,qFAE8Ce,OAARF,EAAKlB,GAAG,2D,CAyDpE,SAASsB,IAzCT,IAEQC,IADcxB,EAAMyB,QAAO,SAAAN,G,OAASA,EAAKO,Q,IACjBC,IAAIT,GAAeE,KAAK,IACtDb,EAAWqB,cAAc,SAASC,UAAYL,EAE1BjB,EAAWK,iBAAiB,aACpCkB,SAAQ,SAAAC,GAClBA,EAAOC,iBAAiB,QAASC,E,IAGZ1B,EAAWK,iBAAiB,gBACpCkB,SAAQ,SAAAC,GACrBA,EAAOC,iBAAiB,QAASE,E,IAGb3B,EAAWK,iBAAiB,eACpCkB,SAAQ,SAAAC,GACpBA,EAAOC,iBAAiB,QAASG,E,IAIrC,WACE,IAAMC,EAAc,GACpBrC,EAAW+B,SAAQ,SAAAzB,GACjB,IAAMgC,EAAcrC,EAAMyB,QACxB,SAAAN,G,OAASA,EAAKO,UAAYP,EAAKd,WAAaA,C,IAC5CiC,OACIC,EAAgBvC,EAAMyB,QAC1B,SAAAN,G,OAAQA,EAAKO,UAAYP,EAAKd,WAAaA,C,IAC3CiC,OACFF,EAAYI,KAAK,CAAEnC,WAAUgC,cAAaE,iB,IAG5C,IAAME,EAAcL,EACjBT,KAAI,SAAAe,G,OA7CiBrC,EA8CHqC,EAAKrC,SA9CQgC,EA8CEK,EAAKL,YA9CME,EA8COG,EAAKH,cA7CpD,mCAGSlB,OADAhB,EAAS,2BAETgB,OADAgB,EAAY,2BACEhB,OAAdkB,EAAc,8BALhC,IAA0BlC,EAAUgC,EAAaE,C,IAgD5CnB,KAAK,IACRT,EAAaiB,cAAc,SAASC,UAAYY,C,CAKhDE,GACAC,G,CAGF,SAASX,EAAsBY,GAC7B,IASyB1B,EATnB2B,EAASD,EAAME,OAAOC,QAAQF,OAC9BG,EAAOjD,EAAMkD,MAAK,SAAA/B,G,OAAQA,EAAKlB,KAAOkD,SAASL,E,IAChDG,GAQLnD,GADyBqB,EAHP8B,GAIAhD,GAClBO,SAASC,eAAe,2BAA2B2C,MAAQjC,EAAKf,QAChEI,SAASC,eAAe,4BAA4B2C,MAAQjC,EAAKd,SACjEG,SAASC,eAAe,yBAAyB2C,MAC/CjC,EAAKb,MAAMc,KAAK,MAClBL,EAAiBsC,MAAMC,QAAU,QAEjCtC,EAAiBgB,iBAAiB,QAASuB,GAC3CtC,EAAmBe,iBAAiB,QAASwB,IAf3CC,MAAM,kB,CAkBV,SAASF,IACP,IAAMnD,EAAUI,SACbC,eAAe,2BACf2C,MAAMM,OACHrD,EAAWG,SAASC,eAAe,4BAA4B2C,MAE/D9C,EAAQqD,EADKnD,SAASC,eAAe,yBAAyB2C,OAGpE,GAAKhD,EAAL,CAKA,IAAMwD,EAAO5D,EAAMkD,MAAK,SAAA/B,G,OAAQA,EAAKlB,KAAOH,C,IACvC8D,GAKLA,EAAKxD,QAAUA,EACfwD,EAAKvD,SAAWA,EAChBuD,EAAKtD,MAAQA,EAEbiB,IACAiC,KATEC,MAAM,kB,MANNA,MAAM,6B,CAkBV,SAASD,IACPzC,EAAiBsC,MAAMC,QAAU,M,CAInC,SAASpB,EAAyBW,GAChC,IAAMC,EAASD,EAAME,OAAOC,QAAQF,QAItC,SAAqB7C,GACnB,IAAM4D,EAAO7D,EAAMkD,MAAK,SAAA/B,G,OAAQA,EAAKlB,KAAOA,C,IAC5C,IAAK4D,EAEH,YADAJ,MAAM,mBAGRI,EAAKnC,UAAW,EAChBH,G,CAVAuC,CAAYX,SAASL,G,CAahB,SAASiB,EAAc9D,GAC5B,IAAM+D,EAAOhE,EAAMkD,MAAK,SAAA/B,G,OAAQA,EAAKlB,KAAOA,C,IACvC+D,GAILA,EAAKtC,UAAW,EAChBkB,IACArB,KALEkC,MAAM,kB,CAOH,SAASQ,EAA2BpB,GACzC,IAAMC,EAASD,EAAME,OAAOC,QAAQF,OACpCiB,EAAcZ,SAASL,G,CAGzB,SAASF,IACP,IACMsB,EADgBlE,EAAMyB,QAAO,SAAAN,G,OAAQA,EAAKO,Q,IACRC,IAAIL,GAAuBF,KAAK,IACxEV,EAAmBkB,cAAc,SAASC,UAAYqC,EAGpDxD,EAAmBE,iBAAiB,kBACrBkB,SAAQ,SAAAC,GACvB,IAAMe,EAASf,EAAOiB,QAAQF,OAC9Bf,EAAOC,iBAAiB,SAAS,W,OAAMiC,EAA2BnB,E,OAG9CpC,EAAmBE,iBAAiB,eAC5CkB,SAAQ,SAAAC,GACpB,IAAMe,EAASf,EAAOiB,QAAQF,OAC9Bf,EAAOC,iBAAiB,SAAS,W,OAAMG,EAAwBW,E,OAG7CpC,EAAmBE,iBAAiB,aAC5CkB,SAAQ,SAAAC,GAClBA,EAAOC,iBAAiB,QAASC,E,IAIrC,SAASgC,EAA2BnB,GAClCiB,EAAcZ,SAASL,G,CAGzB,SAASX,EAAwBW,GAC/BqB,EAAWhB,SAASL,G,CAItB,SAASX,EAAwBU,GAC/B,IAAMC,EAASD,EAAME,OAAOC,QAAQF,OACpCqB,EAAWhB,SAASL,G,CAGtB,SAASqB,EAAWlE,GAClB,IAAMmE,EAAYpE,EAAMqE,WAAU,SAAAlD,G,OAAQA,EAAKlB,KAAOA,C,KACpC,IAAdmE,GAIJpE,EAAMsE,OAAOF,EAAW,GACxB7C,KAJEkC,MAAM,kB,CAQV,SAASc,IA2CPzD,EAAauC,MAAMC,QAAU,QAxC7B,IAAMkB,EAAehE,SAASC,eAAe,kBACvCgE,EAAiBjE,SAASC,eAAe,oBAE/C,SAASiE,IACP,IAAMtE,EAAUI,SAASC,eAAe,sBAAsB2C,MAAMM,OAC9DrD,EAAWG,SAASC,eAAe,uBAAuB2C,MAE1D9C,EAAQqD,EADKnD,SAASC,eAAe,oBAAoB2C,OAG/D,GAAKhD,EAAL,CAKA,IAAMuE,EAAU,CACd1E,GAAID,EAAMsC,OAAS,EACnBnC,WAAW,IAAIyE,MAAOC,cAAcC,MAAM,EAAG,IAC7C1E,UACAC,WACAC,QACAoB,UAAU,GAGZ1B,EAAM+E,QAAQJ,GACdpD,IACAyD,IAEAR,EAAaS,oBAAoB,QAASP,E,MAjBxCjB,MAAM,6B,CAoBVe,EAAaxC,iBAAiB,QAAS0C,GAEvCD,EAAezC,iBAAiB,SAAS,WACvCgD,IAEAR,EAAaS,oBAAoB,QAASP,E,IAQ9C,SAASM,IACPlE,EAAauC,MAAMC,QAAU,M,CAI/B,SAASK,EAAgBuB,GAEvB,OADmBA,EAAWC,MAAM,KAAKxD,KAAI,SAAAyD,G,OAAQA,EAAK1B,M,IACxCjC,QAAO,SAAA2D,G,MAAiB,KAATA,C,IAGnC5E,SAASwB,iBAAiB,oBAAoB,WAC5CT,IACAqB,IACA9B,EAAakB,iBAAiB,SAAS,SAAAa,GACjCA,EAAME,SAAWjC,GACnBkE,G,IAGJjE,EAAiBiB,iBAAiB,SAAS,SAAAa,GACrCA,EAAME,SAAWhC,GACnByC,G,IAGqB9C,EAAmBE,iBAAiB,eAC5CkB,SAAQ,SAAAC,GACvB,IAAMe,EAASf,EAAOiB,QAAQF,OAC9Bf,EAAOC,iBAAiB,SAAS,W,OAAMiC,EAA2BnB,E,OAEpEjC,EAAWmB,iBAAiB,QAASuC,E","sources":["src/js/notes.js","src/index.js"],"sourcesContent":["export const categories = ['Task', 'Random Thought', 'Idea'];\nexport const notes = [\n  {\n    id: 1,\n    name: 'Theory of evolution',\n    createdAt: '2023-07-30',\n    content: 'This is a random thought',\n    category: 'Random Thought',\n    dates: ['2023-06-10'],\n  },\n  {\n    id: 2,\n    name: 'Shopping List',\n    createdAt: '2023-07-31',\n    content:\n      \"I'm gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\n    category: 'Task',\n    dates: ['3/5/2021', '5/5/2021'],\n  },\n  {\n    id: 3,\n    name: 'New Feature',\n    createdAt: '2023-07-29',\n    content: 'I have an idea for a new project',\n    category: 'Idea',\n    dates: ['2023-08-01'],\n  },\n  {\n    id: 4,\n    name: 'Shopping List',\n    createdAt: '2023-07-28',\n    content: 'Buy milk',\n    category: 'Task',\n    dates: ['2023-07-31'],\n  },\n  {\n    id: 5,\n    name: 'To-do List',\n    createdAt: '2023-07-27',\n    content: 'Walk the dog',\n    category: 'Task',\n    dates: ['2023-07-30', '2023-07-31'],\n  },\n  {\n    id: 6,\n    name: 'To-do List',\n    createdAt: '2023-07-26',\n    content: 'Call my mom',\n    category: 'Task',\n    dates: ['2023-07-31'],\n  },\n  {\n    id: 7,\n    name: 'Shopping List',\n    createdAt: '2023-07-25',\n    content: 'Pay the bills',\n    category: 'Task',\n    dates: ['2023-07-31'],\n  },\n];\n\n","import { notes, categories } from './js/notes.js';\n\nconst notesTable = document.getElementById('notes-table');\nconst archivedNotesTable = document.getElementById('archived-notes-table');\nconst unarchiveNoteButtons = document.querySelectorAll('.unarchive-btn');\nconst summaryTable = document.getElementById('summary-table');\nconst addNoteBtn = document.getElementById('add-note-btn');\nconst modalOverlay = document.getElementById('modal-overlay');\nconst modalSaveBtn = document.getElementById('modal-save-btn');\nconst modalCancelBtn = document.getElementById('modal-cancel-btn');\nconst editModalOverlay = document.getElementById('edit-modal-overlay');\nconst editModalSaveBtn = document.getElementById('edit-modal-save-btn');\nconst editModalCancelBtn = document.getElementById('edit-modal-cancel-btn');\n\nlet editNoteId;\n\n// Markup function\n\nfunction createNoteRow(note) {\n  const dates = note.dates.join(', ');\n  return `\n        <tr>\n            <td>${note.createdAt}</td>\n            <td>${note.content}</td>\n            <td>${note.category}</td>\n            <td>${dates}</td>\n            <td>\n                <button class=\"edit-btn\" data-note-id=\"${note.id}\">Edit</button>\n                <button class=\"archive-btn\" data-note-id=\"${note.id}\">Archive</button>\n                <button class=\"delete-btn\" data-note-id=\"${note.id}\">Delete</button>\n            </td>\n        </tr>\n    `;\n}\nfunction createArchivedNoteRow(note) {\n  const dates = note.dates.join(', ');\n  return `\n      <tr>\n          <td>${note.createdAt}</td>\n          <td>${note.content}</td>\n          <td>${note.category}</td>\n          <td>${dates}</td>\n          <td>\n              <button class=\"unarchive-btn\" data-note-id=\"${note.id}\">Unarchive</button>\n          </td>\n      </tr>\n    `;\n}\nfunction createSummaryRow(category, activeCount, archivedCount) {\n  return `\n        <tr>\n            <td>${category}</td>\n            <td>${activeCount}</td>\n            <td>${archivedCount}</td>\n        </tr>\n    `;\n}\n\n// Update function\nfunction updateNotesTable() {\n  const activeNotes = notes.filter(note => !note.archived);\n  const notesHTML = activeNotes.map(createNoteRow).join('');\n  notesTable.querySelector('tbody').innerHTML = notesHTML;\n\n  const editButtons = notesTable.querySelectorAll('.edit-btn');\n  editButtons.forEach(button => {\n    button.addEventListener('click', handleEditButtonClick);\n  });\n\n  const archiveButtons = notesTable.querySelectorAll('.archive-btn');\n  archiveButtons.forEach(button => {\n    button.addEventListener('click', handleArchiveButtonClick);\n  });\n\n  const deleteButtons = notesTable.querySelectorAll('.delete-btn');\n  deleteButtons.forEach(button => {\n    button.addEventListener('click', handleDeleteButtonClick);\n  });\n}\n\nfunction updateSummaryTable() {\n  const summaryData = [];\n  categories.forEach(category => {\n    const activeCount = notes.filter(\n      note => !note.archived && note.category === category\n    ).length;\n    const archivedCount = notes.filter(\n      note => note.archived && note.category === category\n    ).length;\n    summaryData.push({ category, activeCount, archivedCount });\n  });\n\n  const summaryHTML = summaryData\n    .map(data =>\n      createSummaryRow(data.category, data.activeCount, data.archivedCount)\n    )\n    .join('');\n  summaryTable.querySelector('tbody').innerHTML = summaryHTML;\n}\n\nfunction updateTables() {\n  updateNotesTable();\n  updateSummaryTable();\n  updateArchivedNotesTable();\n}\n//   Edit Modal\nfunction handleEditButtonClick(event) {\n  const noteId = event.target.dataset.noteId;\n  const note = notes.find(note => note.id === parseInt(noteId));\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n  showEditNoteModal(note);\n}\n\nfunction showEditNoteModal(note) {\n  editNoteId = note.id;\n  document.getElementById('edit-note-content-input').value = note.content;\n  document.getElementById('edit-note-category-input').value = note.category;\n  document.getElementById('edit-note-dates-input').value =\n    note.dates.join(', ');\n  editModalOverlay.style.display = 'block';\n\n  editModalSaveBtn.addEventListener('click', handleEditNoteSave);\n  editModalCancelBtn.addEventListener('click', hideEditNoteModal);\n}\n\nfunction handleEditNoteSave() {\n  const content = document\n    .getElementById('edit-note-content-input')\n    .value.trim();\n  const category = document.getElementById('edit-note-category-input').value;\n  const datesInput = document.getElementById('edit-note-dates-input').value;\n  const dates = parseDatesInput(datesInput);\n\n  if (!content) {\n    alert('Please enter note content.');\n    return;\n  }\n\n  const note = notes.find(note => note.id === editNoteId);\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n\n  note.content = content;\n  note.category = category;\n  note.dates = dates;\n\n  updateTables();\n  hideEditNoteModal();\n}\n\nfunction hideEditNoteModal() {\n  editModalOverlay.style.display = 'none';\n}\n\n// Archive function\nfunction handleArchiveButtonClick(event) {\n  const noteId = event.target.dataset.noteId;\n  archiveNote(parseInt(noteId));\n}\n\nfunction archiveNote(id) {\n  const note = notes.find(note => note.id === id);\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n  note.archived = true;\n  updateTables();\n}\n\nexport function unarchiveNote(id) {\n  const note = notes.find(note => note.id === id);\n  if (!note) {\n    alert('Note not found!');\n    return;\n  }\n  note.archived = false;\n  updateArchivedNotesTable();\n  updateTables();\n}\nexport function handleUnarchiveButtonClick(event) {\n  const noteId = event.target.dataset.noteId;\n  unarchiveNote(parseInt(noteId));\n}\n\nfunction updateArchivedNotesTable() {\n  const archivedNotes = notes.filter(note => note.archived);\n  const archivedNotesHTML = archivedNotes.map(createArchivedNoteRow).join('');\n  archivedNotesTable.querySelector('tbody').innerHTML = archivedNotesHTML;\n\n  const unarchiveButtons =\n    archivedNotesTable.querySelectorAll('.unarchive-btn');\n  unarchiveButtons.forEach(button => {\n    const noteId = button.dataset.noteId;\n    button.addEventListener('click', () => handleUnarchiveButtonClick(noteId));\n  });\n\n  const deleteButtons = archivedNotesTable.querySelectorAll('.delete-btn');\n  deleteButtons.forEach(button => {\n    const noteId = button.dataset.noteId;\n    button.addEventListener('click', () => handleDeleteButtonClick(noteId));\n  });\n\n  const editButtons = archivedNotesTable.querySelectorAll('.edit-btn');\n  editButtons.forEach(button => {\n    button.addEventListener('click', handleEditButtonClick);\n  });\n}\n\nfunction handleUnarchiveButtonClick(noteId) {\n  unarchiveNote(parseInt(noteId));\n}\n\nfunction handleDeleteButtonClick(noteId) {\n  deleteNote(parseInt(noteId));\n}\n// Delete function\n\nfunction handleDeleteButtonClick(event) {\n  const noteId = event.target.dataset.noteId;\n  deleteNote(parseInt(noteId));\n}\n\nfunction deleteNote(id) {\n  const noteIndex = notes.findIndex(note => note.id === id);\n  if (noteIndex === -1) {\n    alert('Note not found!');\n    return;\n  }\n  notes.splice(noteIndex, 1);\n  updateTables();\n}\n\n// Add new note function\nfunction addNewNote() {\n  showAddNoteModal();\n\n  const modalSaveBtn = document.getElementById('modal-save-btn');\n  const modalCancelBtn = document.getElementById('modal-cancel-btn');\n\n  function onSaveClick() {\n    const content = document.getElementById('note-content-input').value.trim();\n    const category = document.getElementById('note-category-input').value;\n    const datesInput = document.getElementById('note-dates-input').value;\n    const dates = parseDatesInput(datesInput);\n\n    if (!content) {\n      alert('Please enter note content.');\n      return;\n    }\n\n    const newNote = {\n      id: notes.length + 1,\n      createdAt: new Date().toISOString().slice(0, 10),\n      content,\n      category,\n      dates,\n      archived: false,\n    };\n\n    notes.unshift(newNote);\n    updateTables();\n    hideAddNoteModal();\n\n    modalSaveBtn.removeEventListener('click', onSaveClick);\n  }\n\n  modalSaveBtn.addEventListener('click', onSaveClick);\n\n  modalCancelBtn.addEventListener('click', function () {\n    hideAddNoteModal();\n\n    modalSaveBtn.removeEventListener('click', onSaveClick);\n  });\n}\n\nfunction showAddNoteModal() {\n  modalOverlay.style.display = 'block';\n}\n\nfunction hideAddNoteModal() {\n  modalOverlay.style.display = 'none';\n}\n\n// For date function\nfunction parseDatesInput(datesInput) {\n  const datesArray = datesInput.split(',').map(date => date.trim());\n  return datesArray.filter(date => date !== '');\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  updateTables();\n  updateArchivedNotesTable();\n  modalOverlay.addEventListener('click', event => {\n    if (event.target === modalOverlay) {\n      hideAddNoteModal();\n    }\n  });\n  editModalOverlay.addEventListener('click', event => {\n    if (event.target === editModalOverlay) {\n      hideEditNoteModal();\n    }\n  });\n  const unarchiveButtons = archivedNotesTable.querySelectorAll('.delete-btn');\n  unarchiveButtons.forEach(button => {\n    const noteId = button.dataset.noteId;\n    button.addEventListener('click', () => handleUnarchiveButtonClick(noteId));\n  });\n  addNoteBtn.addEventListener('click', addNewNote);\n});\n"],"names":["$b8f9b7833fa37166$var$editNoteId","$a5708fa563ff8f05$export$2c76aca27257bcfa","$a5708fa563ff8f05$export$fff9cb9cb797a870","id","name","createdAt","content","category","dates","$b8f9b7833fa37166$var$notesTable","document","getElementById","$b8f9b7833fa37166$var$archivedNotesTable","$b8f9b7833fa37166$var$summaryTable","querySelectorAll","$b8f9b7833fa37166$var$addNoteBtn","$b8f9b7833fa37166$var$modalOverlay","$b8f9b7833fa37166$var$editModalOverlay","$b8f9b7833fa37166$var$editModalSaveBtn","$b8f9b7833fa37166$var$editModalCancelBtn","$b8f9b7833fa37166$var$createNoteRow","note","join","concat","$b8f9b7833fa37166$var$createArchivedNoteRow","$b8f9b7833fa37166$var$updateTables","notesHTML","filter","archived","map","querySelector","innerHTML","forEach","button","addEventListener","$b8f9b7833fa37166$var$handleEditButtonClick","$b8f9b7833fa37166$var$handleArchiveButtonClick","$b8f9b7833fa37166$var$handleDeleteButtonClick","summaryData","activeCount","length","archivedCount","push","summaryHTML","data","$b8f9b7833fa37166$var$updateSummaryTable","$b8f9b7833fa37166$var$updateArchivedNotesTable","event","noteId","target","dataset","note1","find","parseInt","value","style","display","$b8f9b7833fa37166$var$handleEditNoteSave","$b8f9b7833fa37166$var$hideEditNoteModal","alert","trim","$b8f9b7833fa37166$var$parseDatesInput","note2","note3","$b8f9b7833fa37166$var$archiveNote","$b8f9b7833fa37166$export$3576927aeac67f67","note4","$b8f9b7833fa37166$export$c830d14115778327","archivedNotesHTML","$b8f9b7833fa37166$var$deleteNote","noteIndex","findIndex","splice","$b8f9b7833fa37166$var$addNewNote","modalSaveBtn1","modalCancelBtn1","onSaveClick","newNote","Date","toISOString","slice","unshift","$b8f9b7833fa37166$var$hideAddNoteModal","removeEventListener","datesInput","split","date"],"version":3,"file":"index.18aa008e.js.map"}